[{"content":"Along with my OMV (OpenMediaVault) setup with a Raspberry Pi and a couple of SSD drives, I have a Synology NAS which really makes your life easier.\nSetup First of all, you need to put either a single 3.5\u0026quot; or 2.5\u0026quot; drive inside the Synology before starting it.\nAfter that, you can browse and search your NAS on:\n find.synology.com synologynas:5000  This will take a little bit until it finds your NAS and it will display a web page with some basic data about your new device and the status which is really important that says \u0026ldquo;Not Installed\u0026rdquo;.\nThen, click \u0026ldquo;Connect\u0026rdquo; at the bottom and that will start the DSM installation and setup process.\nDSM config On the new screen, you will have the option to download the latest version of DSM, this is really important so even if it takes some time, do it. The NAS will be restarted if needed.\nFinally, a new screen will ask you for a name for the device, an administrator name and password.\nAlso, the option to use Synology Active Insight and configuration backups is there, you can use it as you wish. Short story long, SAI is basically monitoring of the NAS with an email address you can get a notification of all the events that happen on the NAS or you can configure what you really want to receive as a notification.\nCreating a Pool/Volume The new prompt will tell you to setup a Storage Pool and Volume.\nThe wizard will guide you and is pretty much intuitive. You will need to define a description for the pool and select a RAID or not, this options are up to you and what do you want to do with the NAS.\nSelect the drives that you want to use (usually all of them). In any case, it\u0026rsquo;s always possible to add more resources to the pool.\nThen, there will be a message saying that the data will be wipped from the drives and if you like to perform a drive checks. The last one, will take a very long time but it can run in the background while you are doing other stuff.\nNext, you will have to select how much of the volume you want to allocate which is usually all of it.\nApply your changes and your new storage pool/volume is ready.\nStatic IP address If you can set it up on your router (or whatever device that is giving you DHCP IP\u0026rsquo;s) do the reservation and on your NAS go to Control Panel \u0026gt; Network \u0026gt; LAN and select the interface with the current IP.\nthere select \u0026ldquo;Use manual configuration\u0026rdquo; put the IP, mask, gateway, etc.\nShared folders Now that your pool/volume was setup and the IP address is static you can setup a couple of folder to be shared on your local network.\nThis option is under Control Panel \u0026gt; Shared Folder. Create one, give it an appropriate name and select the permissions that you want.\nTwo things are really important here,\n encryption option users/ permissions.  If you lose your encryption key, then your data is lost forever. Also, with this option you can easily face slowness in your transfers.\nUsers and permissions, the best is to keep everything aligned with different users. I mean, if you use SMB and NFS, create one user for SMB and another one for NFS. Same, if you later install docker and you use containers.\nSumming up With these steps you should be good to start using your Synology NAS.\nThere are tons of things to do, you can use containers with dockers, create snapshots of folder, use versioning for files, etc.\nIt\u0026rsquo;s also nice to use an external DNS for your NAS to reach it from outside which is a free service from Synology and super easy to setup. If you go in that direction, you will probably end up using a couple of containers to use some services outside your home/office so always keep an eye on the firewall settings. Have fun!\n","permalink":"https://vanboxen.github.io/posts/howto-configure-synology-nas/","summary":"Along with my OMV (OpenMediaVault) setup with a Raspberry Pi and a couple of SSD drives, I have a Synology NAS which really makes your life easier.\nSetup First of all, you need to put either a single 3.5\u0026quot; or 2.5\u0026quot; drive inside the Synology before starting it.\nAfter that, you can browse and search your NAS on:\n find.synology.com synologynas:5000  This will take a little bit until it finds your NAS and it will display a web page with some basic data about your new device and the status which is really important that says \u0026ldquo;Not Installed\u0026rdquo;.","title":"HowTO Configure Synology NAS"},{"content":"Cockpit is a web based interface that let you manage and monitor different devices.\nThe installation process is super simple, you just need to install the packet on each device and then you can access with any account that you have.\nMain features  Monitoring system activity (CPU, memory, disk IO and network traffics) — System Viewing system log entries — Logs Seeing how full your disk partitions are — Storage Watching networking activity (sent and received) — Networking Taking a look at user accounts — Accounts Checking the status of system services — Services Pulling up information on installed applications — Applications Viewing and installing available updates (if logged in as root) and restart the system if needed — Software Updates Opening and using a terminal window — Terminal  HowTO install Cockpit I\u0026rsquo;m not really going to stop here because it\u0026rsquo;s as simple as doing the installation of the package so use your favorite package manager and do it.\nFor example:\nzypper in cockpit Access Cockpit web interface Browse to:\nhttps://\u0026lt;system-name-or-IP\u0026gt;:9090 You will get a prompt to insert user pass so use one of the accounts running on that device better a admin account so see all options. In any case, on top of the browser you will have the option to grant you admin rights inserting the password for root.\nAt the top left (under your username) you can add more devices and then have a centralized dashboard with common graphs. Just remember to install the package on all of them.\nThe interface is really intuitive and it exactly grants you access to what it says, logs, packages, even your own virtual machines are now handy!\n","permalink":"https://vanboxen.github.io/posts/howto-install-cockpit/","summary":"Cockpit is a web based interface that let you manage and monitor different devices.\nThe installation process is super simple, you just need to install the packet on each device and then you can access with any account that you have.\nMain features  Monitoring system activity (CPU, memory, disk IO and network traffics) — System Viewing system log entries — Logs Seeing how full your disk partitions are — Storage Watching networking activity (sent and received) — Networking Taking a look at user accounts — Accounts Checking the status of system services — Services Pulling up information on installed applications — Applications Viewing and installing available updates (if logged in as root) and restart the system if needed — Software Updates Opening and using a terminal window — Terminal  HowTO install Cockpit I\u0026rsquo;m not really going to stop here because it\u0026rsquo;s as simple as doing the installation of the package so use your favorite package manager and do it.","title":"HowTO Install Cockpit"},{"content":"Let\u0026rsquo;s talk about Netdata.\nNetdata is a daemon which runs on your device(s) collecting data in real time. It has a very nice interface and it\u0026rsquo;s possible to see your devices from anywhere with Netdata Cloud (once you add your nodes into it).\nFor monitoring there are a lot of tools which are great like Nagios, Icinga, Prometheus, etc but this one is really easy to install and use from home without doing a lot of stuff.\nHowTO install Netdata The installation is really simple, you just execute the command to install the daemon and he is able to do the rest. You just need to accept a couple of things here and there and done.\nbash \u0026lt;(curl -Ss https://my-netdata.io/kickstart.sh)   By default Netdata agent is being auto-updated but if you want to do it manually just add \u0026ndash;no-updates at the end of the command\n It will take a while until the installation finishes. After that, you can access the monitoring of your device on:\nhttp://your-server-ip:19999  Setup an account on Netdata Cloud Visit the main page of Netdata and login with your Google/Github account or create a new one just of Netdata as you wish.\nYou will get an email with a link to start the configuration process of the Cloud. Select a space name which is basically how the main menu is going to be call. Also, the way to manage different projects and avoid having devices mixed on a single web.\nAfter that, the \u0026ldquo;Claim your first node in \u0026lt;SPACE_NAME\u0026gt;\u0026rdquo; appers so from your devices (wherever you installed the agent before) execute the command shown to add them to the \u0026ldquo;War room\u0026rdquo; . If you didn\u0026rsquo;t defined one they will be added to the \u0026ldquo;General\u0026rdquo; one. In any case, you can move devices from one War room to another without issues.\nThat\u0026rsquo;s it! By default a lot of \u0026ldquo;checks\u0026rdquo; are being tracked by the tool but you can also create your own plugins.\nRead this documentation: Netdata Plugins\nYou can use Go, Python, NodeJS and Bash to create them.\n","permalink":"https://vanboxen.github.io/posts/howto-install-netdata/","summary":"Let\u0026rsquo;s talk about Netdata.\nNetdata is a daemon which runs on your device(s) collecting data in real time. It has a very nice interface and it\u0026rsquo;s possible to see your devices from anywhere with Netdata Cloud (once you add your nodes into it).\nFor monitoring there are a lot of tools which are great like Nagios, Icinga, Prometheus, etc but this one is really easy to install and use from home without doing a lot of stuff.","title":"HowTO Install Netdata"},{"content":"Packages that we need\n brew git  Installing HUGO You will need first to have brew installed on your device so make sure that is up and running. Then from linux/mac just open the terminal and install HUGO.\nbrew install hugo  If everything was fine just check it with:\nhugo version  Now a days is common to have git preinstalled by default. Anyway, if you need to check if the package is already there then:\ngit --version  Otherwise, use your favorite package manager to install. For example:\nzypper install git  Hurray! We have everything that we need.\nLet\u0026rsquo;s first create our site locally Now that we have everything installed is time to setup our site locally. Later on, I will explain how to move it outside your device.\nGo to whatever folder you want and create a specific one for the site.\ncd Desktop ; hugo new site my_website   A new folder called my_website will be created on the Desktop\n Then you will have a nice prompt telling you where to download themes and how to do some customization, etc.\nFolder structure This is the folder structure after the installation. I put in bold the most used ones or at least the ones that we are going to use.\n├ archetypes\n├ content\n├ data\n├ layouts\n├ resources\n├ static\n├ themes\n└── config.*\n   Folder / File Purpose     archetypes store your md (markdown) file templates   content where your static pages and posts are live   themes themes installation folder   config.* the config file of your site    The config file is the most important one and based on your theme you will have to use a *.toml file or *.yaml.\nReading the theme installation is really important and mostly all the customization that you can perform can be found there.\n Later another folder will be created called \u0026ldquo;public\u0026rdquo; where the webpage code resides and the one that is pushed into the hosting sites.\n Themes There are a good bunch of themes on the official webpage of HUGO so feel free to use and test all of them.\nBasically, you have to download them to the theme folder and then point the config file to the correct theme. Finally, build again HUGO (I will explain these later). For example for the PaperMod theme execute the next commands:\ncd my_website git clone https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod --depth=1   You can also add a subrepo with \u0026ldquo;git submodule add\u0026rdquo; but remember that if you want to work from different places you will need to install the theme on each device.\n PaperMod needs a yaml file config and by default, after the instalation, you have a config.toml file so save it as backup and create a new one with the info from theme itself.\ncd my_website mv config.yaml config.yaml.bkp touch config.yaml  Then paste the basic config lines inside the previous created file.\nbaseURL: \u0026quot;https://examplesite.com/\u0026quot; title: ExampleSite paginate: 5 theme: PaperMod  The main difference with toml and yaml is the structure so you will get a lot of errors when you build the site with HUGO after.\nAt this point, it\u0026rsquo;s worth it to execute HUGO for the first time to see if you already have errors on your config file.\nhugo # that simple!  The public folder will be created now since hugo command is a kind of compilation command so it creates everything needed to run your site on internet. This will throw some lines on your monitor with errors if something went wrong or with this table if everything is fine:\nStart building sites …\n    EN     Pages 10   Paginator pages 0   Non-page files 0   Static files 2   Processed images 0   Aliases 3   Sitemaps 1   Cleaned 0     In case of errors, google is your friend! But usually is related with a miss-typo inside the config file or something that maybe is obsolete for your version of HUGO.\n First post! Getting big To post just execute:\ncd my_site hugo new content/posts/first-post.md  Go to the file with your favorite text editor and you will see a couple of lines already there. This comes by default and if you want to edit them later you can place a file inside the archetypes folder with the info that you want like tags, content, etc. Really depends on how are you going to use the page.\nAlso, by default comes \u0026ldquo;draft = true\u0026rdquo; which means that you are creating a file that is a draft and is not going to be published. Either you can remove, comment or change it to true to make the page available.\nExecute HUGO again to avoid config issues.\nhugo  Running HUGO locally We have our page configured and our first post ready to be shared. Let\u0026rsquo;s test HUGO locally and see how the pages looks like.\nhugo server  On the prompt, you will see the page that you need to reach your website.\nhttp://localhost:1313  Publish your site I used Github Pages to put this blog online. It\u0026rsquo;s simple and I like the fact that I can handle everything usign git from different devices if needed.\nExecute HUGO one more time\nhugo   Do it always before you push changes on your website\n The last part is to create the repository on Github and start git on your public website folder.\ncd my_website/public git init git add * git remote add origin https://github.com/username/username.github.io.git git commit -m \u0026quot;We are going live!\u0026quot; git push origin master  Now you can see your website on Github Pages. Enjoy!\nGithub Pages + Github repo I did something simple to be able to post from any device so along with public folder being on Github Pages I\u0026rsquo;ve also configured Github on the main folder.\nJust create a .gitignore file to avoid pushing the public folder of HUGO on the config repository which is not needed.\nvi .gitignore  Explicit write the name of the folder/files that you want to exclude. In this case:\npublic/  Save the file and create another repository on Github.\ncd my_website git init git add * git remote add origin https://github.com/username/whatever.git git commit -m \u0026quot;First push of the config files\u0026quot; git push origin master  Finally, I did a small bash script to do everything for me. The procedure goes like this (without the script)\nhugo new another-post.md hugo git push into Github for the config and the new post git push into Github Pages for the new post created  ","permalink":"https://vanboxen.github.io/posts/howto-install-hugo/","summary":"Packages that we need\n brew git  Installing HUGO You will need first to have brew installed on your device so make sure that is up and running. Then from linux/mac just open the terminal and install HUGO.\nbrew install hugo  If everything was fine just check it with:\nhugo version  Now a days is common to have git preinstalled by default. Anyway, if you need to check if the package is already there then:","title":"HowTO Install HUGO"},{"content":"Welcome!\nThe idea behind this blog is to keep track of whatever I\u0026rsquo;m testing at home. I will probably start with how did the setup of HUGO for the blog which is pretty much straight forward to be honest.\nLearning curve I really expect to have a huge learning curve just because I\u0026rsquo;ve never done such a thing and also because I\u0026rsquo;m a real \u0026ldquo;test and failure\u0026rdquo; person!\nMost common topics  rpi open source packages monitoring NAS NFS SMB Sync the phone on the NAS Big etc!  ","permalink":"https://vanboxen.github.io/posts/real-first-post/","summary":"Welcome!\nThe idea behind this blog is to keep track of whatever I\u0026rsquo;m testing at home. I will probably start with how did the setup of HUGO for the blog which is pretty much straight forward to be honest.\nLearning curve I really expect to have a huge learning curve just because I\u0026rsquo;ve never done such a thing and also because I\u0026rsquo;m a real \u0026ldquo;test and failure\u0026rdquo; person!\nMost common topics  rpi open source packages monitoring NAS NFS SMB Sync the phone on the NAS Big etc!","title":"First Post"}]